#!/usr/bin/env node
/**
 * A tool for executing all of the `acceptance-tests` tests and formatting
 * their results into grokkable output.
 */

var processArguments = require('../lib/processArguments');
var gather_test_suites = require( '../lib/gather_test_suites' );
var validateTestSuites = require( '../lib/validate_test_suites' );
var gather_test_urls = require( '../lib/gather_test_urls' );
var request_urls = require( '../lib/request_urls' );
var eval_tests = require( '../lib/eval_tests' );
var analyze_results = require( '../lib/analyze_results' );

(function runTests(){
  var startTime = new Date().getTime();

  // get configuration options sent via command line parameters
  var config = processArguments.getConfig();

  // steps to be performed after urls have been fetched
  var callback = function(results) {
    // evaluate all test suites (perform scoring, generate diffs, etc)
    var evaled_results = eval_tests(testSuites, results);

    // perform any final required analysis (such as calculating stats)
    var analyzed_results = analyze_results(evaled_results, startTime);

    // display results using the correct output generator
    var return_code = config.outputGenerator(evaled_results, config);

    process.exit(return_code);
  };

  // find all test suites and test cases that will be run
  // configuration parameters may filter out some tests (i.e. with -t dev)
  var testSuites = gather_test_suites(config);
  // check all test suites for errors and perform any needed cleanup
  validateTestSuites(testSuites);
  // collect all urls with parameters that tests require fetched
  var urls = gather_test_urls(config, testSuites);
  // request all urls
  var results = request_urls(urls, callback);
})();
